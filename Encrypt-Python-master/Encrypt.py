import base64
exec(base64.b64decode('# -*- coding: utf-8 -*-
import base64, zlib, marshal, sys
W = '\x1b[1;37m'
RR = '\x1b[1;37m\x1b[31m'
O = '\x1b[33m'
B = '\x1b[34m'
print ("{}{}╔════════════════════════════════════════════╗\n║ ╔═╗┌┐┌┌─┐┬─┐┬ ┬┌─┐┌┬┐  ╔═╗┬ ┬┌┬┐┬ ┬┌─┐┌┐┌  ║\n║ ║╣ ││││  ├┬┘└┬┘├─┘ │───╠═╝└┬┘ │ ├─┤│ ││││  ║\n║ ╚═╝┘└┘└─┘┴└─ ┴ ┴   ┴   ╩   ┴  ┴ ┴ ┴└─┘┘└┘  ║\n║════════════════════════════════════════════║\n║*Author   : MR.DEBO                         ║\n║*Team     : Black Eagle Cyber               ║\n║*Github   : https://github.com/MrDebo       ║\n║*WhatsApp : 081539279932                    ║\n╚════════════════════════════════════════════╝{}\n            \n{}[+] {}Menu:\n\t\n  {}[{}01{}]{} Encrypt File With Base64\n  {}[{}02{}]{} Encrypt File With Base16\n  {}[{}03{}]{} Encrypt File With Base32\n  {}[{}04{}]{} Encrypt File With Marshal\n  {}[{}05{}]{} Encrypt File With Zlib&Base64\n  {}[{}06{}]{} Encrypt File With Zlib&Base64&Marshal\n  {}[{}07{}]{} Encrypt File With Zlib&Base16&Marshal\n  {}[{}08{}]{} Encrypt File With Zlib&Base32&Marshal\n  {}[{}09{}]{} Exit\n  {}[{}10{}]{} Tutorial\n").format(W, O, W, RR, W, B, RR, B, W, B, RR, B, W, B, RR, B, W, B, RR, B, W, B, RR, B, W, B, RR, B, W, B, RR, B, W, B, RR, B, W, B, RR, B, W, B, RR, B, W)

def main():
    choice = raw_input(RR + '[+] ' + W + 'Choose: ')
    if choice == '1' or choice == '01':
        try:
            file = raw_input(RR + '[-] ' + W + 'File: ')
            fileopen = open(file).read()
            a = base64.b64encode(fileopen)
            b = "import base64\nexec(base64.b64decode('" + a + "'))"
            c = file.replace('.py', '_encrypt.py')
            d = open(c, 'w')
            d.write(b)
            d.close()
            print RR + '[✓] ' + RR + 'Succes:', c
            main()
        except:
            print RR + '[×] ' + RR + 'File not found!'
            main()

    if choice == '2' or choice == '02':
        try:
            file = raw_input(RR + '[+] ' + W + 'File: ')
            fileopen = open(file).read()
            a = base64.b16encode(fileopen)
            b = "import base64\nexec(base64.b16decode('" + a + "'))"
            c = file.replace('.py', '_encrypt.py')
            d = open(c, 'w')
            d.write(b)
            d.close()
            print RR + '[✓] ' + RR + 'Succes:', c
            main()
        except:
            print RR + '[×] ' + RR + 'File not found!'
            main()

    if choice == '3' or choice == '03':
        try:
            file = raw_input(RR + '[+] ' + W + 'File: ')
            fileopen = open(file).read()
            a = base64.b32encode(fileopen)
            b = "import base64\nexec(base64.b32decode('" + a + "'))"
            c = file.replace('.py', '_encrypt.py')
            d = open(c, 'w')
            d.write(b)
            d.close()
            print RR + '[✓] ' + RR + 'Succes:', c
            main()
        except:
            print RR + '[×] ' + RR + 'File not found!'
            main()

    if choice == '4' or choice == '04':
        try:
            file = raw_input(RR + '[+] ' + W + 'File: ')
            fileopen = open(file).read()
            a = compile(fileopen, 'dg', 'exec')
            m = marshal.dumps(a)
            s = repr(m)
            b = 'import marshal\nexec(marshal.loads(' + s + '))'
            c = file.replace('.py', '_encrypt.py')
            d = open(c, 'w')
            d.write(b)
            d.close()
            print RR + '[✓] ' + RR + 'Succes:', c
            main()
        except:
            print RR + '[×] ' + RR + 'File not found!'
            main()

    if choice == '5' or choice == '05':
        try:
            file = raw_input(RR + '[+] ' + W + 'File: ')
            fileopen = open(file).read()
            c = zlib.compress(fileopen)
            d = base64.b64encode(c)
            e = 'import marshal,zlib,base64\nexec(zlib.decompress(base64.b64decode("' + d + '")))'
            f = file.replace('.py', '_encrypt.py')
            g = open(f, 'w')
            g.write(e)
            g.close()
            print RR + '[✓] ' + RR + 'Succes:', f
            main()
        except:
            print RR + '[×] ' + RR + 'File not found!'
            main()

    if choice == '6' or choice == '06':
        try:
            file = raw_input(RR + '[+] ' + W + 'File: ')
            fileopen = open(file).read()
            sa = compile(fileopen, 'dg', 'exec')
            sb = marshal.dumps(sa)
            c = zlib.compress(sb)
            d = base64.b64encode(c)
            e = 'import marshal,zlib,base64\nexec(marshal.loads(zlib.decompress(base64.b64decode("' + str(d) + '"))))'
            f = file.replace('.py', '_encrypt.py')
            g = open(f, 'w')
            g.write(e)
            g.close()
            print RR + '[✓] ' + RR + 'Succes:', f
            main()
        except:
            print RR + '[×] ' + RR + 'File not found!'
            main()

    if choice == '7' or choice == '07':
        try:
            file = raw_input(RR + '[+] ' + W + 'File: ')
            fileopen = open(file).read()
            sa = compile(fileopen, 'dg', 'exec')
            sb = marshal.dumps(sa)
            c = zlib.compress(sb)
            d = base64.b16encode(c)
            e = 'import marshal,zlib,base64\nexec(marshal.loads(zlib.decompress(base64.b16decode("' + str(d) + '"))))'
            f = file.replace('.py', '_encrypt.py')
            g = open(f, 'w')
            g.write(e)
            g.close()
            print RR + '[✓] ' + RR + 'Succes:', f
            main()
        except:
            print RR + '[×] ' + RR + 'File not found!'
            main()

    if choice == '8' or choice == '08':
        try:
            file = raw_input(RR + '[+] ' + W + 'File: ')
            fileopen = open(file).read()
            sa = compile(fileopen, 'dg', 'exec')
            sb = marshal.dumps(sa)
            c = zlib.compress(sb)
            d = base64.b32encode(c)
            e = 'import marshal,zlib,base64\nexec(marshal.loads(zlib.decompress(base64.b32decode("' + str(d) + '"))))'
            f = file.replace('.py', '_encrypt.py')
            g = open(f, 'w')
            g.write(e)
            g.close()
            print RR + '[✓] ' + RR + 'Succes:', f
            main()
        except:
            print RR + '[×] ' + RR + 'File not found!'
            main()

    if choice == '9' or choice == '09':
        sys.exit(RR + '[*] ' + W + 'Terimakasih Telah Menggunakan Tools Ini')
    else:
        if choice == '10':
            print W  + '[×]' + O + ' Cara Menggunakan Tools Ini*'
            print W  + '[+]' + O + ' Choose = (Pilih angka pada menu di atas contoh 01)'
            print W  + '[-]' + O + ' File   = (Masukan nama file.nya contoh debo.py)'
            print RR + 'Note :\n 1.File harus berada didalam memory external, \n 2.File harus berada diluar folder \n 3.File harus berbentuk program python (.py)'
            main()
        else:
            print RR + '[-] ' + W + 'Wrong Input!'
            sys.exit(RR + '[*] ' + RR + 'Salah Woy!')


if __name__ == '__main__':
    main()
'))